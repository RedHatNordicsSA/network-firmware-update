---
- name: Validate firmware on firmware system and prereqs
  hosts: localhost
  vars:
    backup_dir: "/home/student1/backup"
    firmware_dir: "/home/student1"
    firmware_file_name: "firmware-update-1.4"
    firmware_file_path: "{{ firmware_dir }}/{{ firmware_file_name }}"
  tasks:  
  - name: Fetch md5 from file
    set_fact:
      md5_value: "{{ lookup('file', '{{ firmware_file_path }}.md5') }}"

  - name:
    debug:
      msg: "Firmware md5 is: {{ md5_value }}"

  - name: Calculate md5 checksum from file
    stat:
      path: "{{ firmware_file_path }}"
      checksum_algorithm: md5
    register: firmware

  - name:
    debug:
      msg: "Calculated: {{ firmware.stat.checksum }}"

  - debug:
      msg: "Firmware is valid"
    when: ( firmware.stat.checksum == md5_value )

  - set_fact:
      valid_firmware: "{{ firmware_file_path }}"
      firmware_md5: "{{ md5_value }}"
    when: ( firmware.stat.checksum == md5_value )

- name: Backup prereqs
  hosts: localhost
  vars:
    backup_dir: "/home/student1/backup"
  tasks:
    - name: Create Directory {{ backup_dir}}
      file:
        path: "{{ backup_dir }}"
        state: directory
      run_once: true

- name: Backup running config
  hosts: rtr1
  vars:
    upgrade_ios_version: 16.09.02
    firmware_dir: "/home/student1"
    firmware_file_name: "firmware-update-1.4"
    firmware_file_path: "{{ firmware_dir }}/{{ firmware_file_name }}"
    backup_dir: "/home/student1/backup"
  tasks:
    - debug: var=hostvars['localhost']['firmware_md5']
      when: hostvars['localhost']['firmware_md5'] is defined

    - name: Gather facts
      ios_facts:

    - debug:
        msg: "Current version {{ ansible_net_version }} is valid"
      when: ( ansible_net_version == upgrade_ios_version )

    - name: Backup running config on {{ inventory_hostname }} 
      ios_command:
        commands: show run  
      register: config

    - name: Save output to {{ backup_dir }}
      copy:
        content: "{{config.stdout[0]}}"
        dest: "{{ backup_dir }}/{{ inventory_hostname }}-config.txt"

    - name: Save running config 
      ios_config:
        save_when: always 

    - name: Copy new firmware to {{ inventory_hostname }}
      net_put: 
        src: "{{ firmware_file_path }}"
        dest: "flash:/{{ firmware_file_name }}"
      vars: 
        ansible_command_timeout: 600
      when: hostvars['localhost']['firmware_md5'] is defined

    - name: Validate firmware on switch
      ios_command: 
        commands: verify /md5 {{ firmware_file_name }} {{ hostvars['localhost']['firmware_md5'] }}
        
    - name: Change boot to new firmware: {{ firmware_file_name }}
      debug:
        msg: "Booting from {{ firmware_file_name }} next."
        
    - name: Reload {{ inventory_hostname }}
      cli_command: 
        command: reload
        prompt: 
          - confirm
        answer: 
          - 'y'
       
    - name: Wait for device to come back online
      wait_for:
        host: "{{ inventory_hostname }}"
        port: 22
        delay: 90
      delegate_to: localhost
    
